# -------------------------------------------------------------------------- #
#
# Copyright (C) 1991-2013 Altera Corporation
# Your use of Altera Corporation's design tools, logic functions 
# and other software and tools, and its AMPP partner logic 
# functions, and any output files from any of the foregoing 
# (including device programming or simulation files), and any 
# associated documentation or information are expressly subject 
# to the terms and conditions of the Altera Program License 
# Subscription Agreement, Altera MegaCore Function License 
# Agreement, or other applicable license agreement, including, 
# without limitation, that your use is for the sole purpose of 
# programming logic devices manufactured by Altera and sold by 
# Altera or its authorized distributors.  Please refer to the 
# applicable agreement for further details.
#
# -------------------------------------------------------------------------- #
#
# Quartus II 64-Bit
# Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition
# Date created = 19:58:11  October 19, 2021
#
# -------------------------------------------------------------------------- #

QUARTUS_VERSION = "13.0"
DATE = "19:58:11  October 19, 2021"

# Revisions

PROJECT_REVISION = "ThunderBirdLights"

ENTITY thunderbird IS
PORT (
clock : in bit;
led : buffer bit_vector(5 downto 0);
sw : in bit_vector(1 downto 0)
);
end thunderbird;

architecture hardware of thunderbird is
	SIGNAL sel : bit_vector(1 downto 0);
BEGIN
	light : PROCESS (clock)
BEGIN
	sel <= sw(1) & sw (0);
	IF ((clock'event) and (clock = '1')) then
		IF (sel = "01") then
		case led is
			WHEN "000000" => led <= "000100";
			WHEN "000100" => led <= "000110";
			WHEN "000110" => led <= "000111";
			WHEN "000111" => led <= "000000";
			WHEN OTHERS => led <= "000000";
		END case;
		ELSIF (sel = "11" ) then
		case led is
			when "000000" => led <= "111111";
			when "111111" => led <= "000000";
			when others => led <= "000000";
		END case;
		else led <= "000000";
		END IF;
	END IF;
	END PROCESS light;
END hardware;
